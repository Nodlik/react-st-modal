{"version":3,"sources":["components/Demo/DemoForm/DemoForm.module.scss","components/Intro/Intro.tsx","Code.ts","components/Button/Button.tsx","components/Demo/DemoForm/DemoForm.tsx","components/ActionLine/ActionLine.tsx","components/ExampleBlock/ExampleBlock.tsx","components/Header/Header.tsx","App.tsx","index.tsx"],"names":["module","exports","PlayButton","enableBackground","height","version","viewBox","width","d","fill","IntroCodeBlock","useState","dialogResult","setDialogResult","resultText","undefined","className","onClick","a","Confirm","isConfirm","language","style","github","Intro","Button","props","type","join","children","DemoForm","useForm","register","handleSubmit","errors","dialog","useDialog","onSubmit","data","close","firstName","lastName","styles","form","content","name","ref","required","errorPlace","formRole","ActionLine","result","setResult","Alert","String","Prompt","isRequired","defaultValue","age","CustomDialog","title","href","ExampleCodeBlock","isMinimized","setMinimized","lang","prism","code","AlertExample","alertState","setAlertState","ConfirmExample","CustomDialogContent","value","setValue","onChange","e","target","CustomExample","showCloseIcon","CustomStaticExample","isOpen","setOpen","onAfterOpen","onAfterClose","AlertDesignExample","setStyle","root","document","documentElement","setProperty","resetStyle","setTimeout","ExampleBlock","Logo","id","fillRule","GithabLogo","x","y","Header","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.22685b15.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"DemoForm_content__2uJXH\",\"errorPlace\":\"DemoForm_errorPlace__2a3u_\"};","import './Intro.scss';\n\nimport React, { useState } from 'react';\n\nimport { Confirm } from 'react-st-modal';\nimport { IntroCode } from '../../Code';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { github } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nexport function PlayButton(): JSX.Element {\n    return (\n        <svg\n            enableBackground=\"new 0 0 128 128\"\n            height=\"128px\"\n            version=\"1.1\"\n            viewBox=\"0 0 128 128\"\n            width=\"128px\"\n        >\n            <path\n                d=\"M107.574,55.165L38.623,15.364C37.044,14.452,35.287,14,33.524,14c-1.762,0-3.519,0.453-5.096,1.365  c-3.157,1.82-5.098,5.186-5.098,8.831v79.611c0,3.644,1.94,7.008,5.098,8.83c1.577,0.912,3.334,1.363,5.096,1.363  c1.763,0,3.52-0.451,5.099-1.363l68.951-39.811c3.153-1.822,5.095-5.186,5.095-8.832C112.669,60.351,110.728,56.987,107.574,55.165z  \"\n                fill=\"#FF6D72\"\n            />\n        </svg>\n    );\n}\n\nfunction IntroCodeBlock(): JSX.Element {\n    const [dialogResult, setDialogResult] = useState<boolean>();\n\n    const resultText =\n        dialogResult !== undefined\n            ? dialogResult\n                ? 'Removal allowed'\n                : 'Removal not confirmed'\n            : '';\n\n    return (\n        <div className=\"intro__code code\">\n            <div\n                className=\"ic__run\"\n                onClick={async () => {\n                    const isConfirm = await Confirm(\n                        'Are you sure you want to delete the entry?',\n                        'You cannot undo this action'\n                    );\n\n                    setDialogResult(isConfirm);\n                }}\n            >\n                <PlayButton />\n            </div>\n            <SyntaxHighlighter language=\"typescript\" style={github}>\n                {IntroCode}\n            </SyntaxHighlighter>\n            <div className=\"ic__resultDialog\">\n                {dialogResult !== undefined && <span>Confirmation result: </span>}\n                {resultText}\n            </div>\n        </div>\n    );\n}\n\nexport function Intro(): JSX.Element {\n    return (\n        <main className=\"intro\">\n            <div className=\"intro__text\">\n                <h1>Simple and powerful modal dialog component for React</h1>\n\n                <p>\n                    React St Modal is a simple and flexible library for implementing modal dialogs. \n                </p>\n\n                <h2>Features</h2>\n\n                <ul>\n                    <li>Simple and easy to use api</li>\n                    <li>Compatible with mobile devices</li>\n                    <li>Implemented standard interaction functions: alert, confirm, prompt</li>\n                    <li>Async/await syntax</li>\n                    <li>Customization via css variables</li>\n                    <li>Dynamic call of modal dialogs, which does not require definition in JSX code</li>\n                    <li>No third party libraries</li>\n                </ul>\n            </div>\n            <IntroCodeBlock />\n        </main>\n    );\n}\n","export const IntroCode = `import { Confirm } from 'react-st-modal';\n\n// ...\nconst onClick = async () => {\n  const isConfirm = await Confirm(\n    'You cannot undo this action',\n    'Are you sure you want to delete the entry?'\n  );\n\n  if (isConfirm) {\n    deleteRow();\n  }\n};`;\n\nexport const AlertExampleCode = `import { Alert } from 'react-st-modal';\n\nfunction AlertExample() {\n  return (\n    <div>\n      <button\n        onClick={async () => {\n          await Alert('Alert text', 'Alert title');\n        }}\n      >\n          Alert\n      </button>\n    </div>\n  );\n}`;\n\nexport const ConfirmExampleCode = `import { Confirm } from 'react-st-modal';\n\nfunction ConfirmExample() {\n  return (\n    <div>\n      <button\n        onClick={async () => {\n          const result = await Confirm('Сonfirmation text', \n            'Сonfirmation title');\n          \n          if (result) {\n            // Сonfirmation confirmed\n          } else {\n            // Сonfirmation not confirmed\n          }\n        }}\n      >\n        Confirm\n      </button>\n    </div>\n  );\n}`;\n\nexport const CustomExampleCode = `import { CustomDialog, useDialog } from 'react-st-modal';\n\nfunction CustomDialogContent() {\n  const dialog = useDialog();\n\n  const [value, setValue] = useState();\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        onChange={(e) => {\n          setValue(e.target.value);\n        }}\n      />\n      <button\n        onClick={() => {\n          // Сlose the dialog and return the value\n          dialog.close(value);\n        }}\n      >\n        Custom button\n      </button>\n    </div>\n  );\n}\n\nfunction CustomExample() {\n  return (\n    <div>\n      <button\n        onClick={async () => {\n          const result = await CustomDialog(<CustomDialogContent />, {\n            title: 'Custom Dialog',\n            showCloseIcon: true,\n          });\n        }}\n      >\n        Custom\n      </button>\n    </div>\n  );\n}\n`;\n\nexport const CustomStaticCode = `import { StaticDialog, useDialog } from 'react-st-modal';\n\nfunction CustomStaticExample() {\n  const [isOpen, setOpen] = useState(false);\n\n  return (\n    <div>\n      <StaticDialog\n        isOpen={isOpen}\n        title=\"Custom static dialog\"\n        onAfterClose={(result) => {\n          setOpen(false);\n          // do something with dialog result\n        }}\n      >\n        {/* see previous demo */}\n        <CustomDialogContent />\n      </StaticDialog>\n      <button\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        Custom static\n      </button>\n    </div>\n  );\n}`;\n\nexport const StyleCode = `:root {\n    --st-modal-borderRadius: 0px;\n    --st-modal-boxShadow: 0 10px 50px rgba(0, 0, 0, 0.8);\n\n    --st-modal-backgroundColor: #2a2a2a;\n    --st-modal-titleTextColor: #eeeeee;\n    --st-modal-secondColor: #3c3c3c;\n\n    --st-dialog-contentColor: #ffffff;\n\n    --st-modal-transformVisible: translate3d(-50%, -50%, 0) scale(1);\n    --st-modal-transformHidden: translate3d(-50%, -50%, 0) scale(0.1);\n\n    --st-button-primaryColor: #dddddd;\n    --st-button-primaryTextColor: #000000;\n}\n`;","import './Button.scss';\n\nimport React, { ReactNode } from 'react';\n\nimport { PlayButton } from '../Intro/Intro';\n\ninterface ButtonProps {\n    children?: ReactNode;\n    className?: string;\n    type?: 'demo' | 'action';\n    onClick?: (event?: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}\n\nexport function Button(props: ButtonProps): JSX.Element {\n    const type = props.type ?? 'action';\n\n    return (\n        <button\n            className={['button', props.className, type === 'demo' ? 'buttonDemo' : undefined].join(\n                ' '\n            )}\n            onClick={props.onClick}\n        >\n            {type === 'demo' && <PlayButton />}\n            {props.children}\n        </button>\n    );\n}\n","import { ModalButton, ModalContent, ModalFooter, useDialog } from 'react-st-modal';\n\nimport React from 'react';\nimport styles from './DemoForm.module.scss';\nimport { useForm } from 'react-hook-form';\n\ntype Inputs = {\n    firstName: string;\n    lastName: string;\n};\n\nexport default function DemoForm(): JSX.Element {\n    const { register, handleSubmit, errors } = useForm<Inputs>();\n\n    const dialog = useDialog<string>();\n    const onSubmit = (data: Inputs) => {\n        dialog.close(`Your name is ${data.firstName} ${data.lastName}`);\n    };\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)} className={styles.form}>\n            <ModalContent className={styles.content}>\n                <label>\n                    <span>First name *: </span>\n                    <input name=\"firstName\" ref={register({ required: true })} />\n                </label>\n                <div className={styles.errorPlace}>\n                    {errors.firstName && <span>First name is required</span>}\n                </div>\n\n                <label>\n                    <span>Last name *: </span>\n                    <input name=\"lastName\" ref={register({ required: true })} />\n                </label>\n                <div className={styles.errorPlace}>\n                    {errors.lastName && <span>Last name is required</span>}\n                </div>\n            </ModalContent>\n\n            <ModalFooter>\n                <ModalButton formRole=\"submit\">Ok</ModalButton>\n                <ModalButton\n                    type=\"danger\"\n                    onClick={() => {\n                        dialog.close(undefined);\n                    }}\n                >\n                    Cancel\n                </ModalButton>\n            </ModalFooter>\n        </form>\n    );\n}\n","import './ActionLine.scss';\n\nimport {\n    Alert,\n    Confirm,\n    CustomDialog,\n    Prompt,\n} from 'react-st-modal';\nimport React, { useState } from 'react';\n\nimport { Button } from '../Button/Button';\nimport DemoForm from '../Demo/DemoForm/DemoForm';\n\nexport function ActionLine(): JSX.Element {\n    const [result, setResult] = useState<string>();\n\n    return (\n        <>\n            <div className=\"actionLine\">\n                <div className=\"actionLine__buttons\">\n                    <Button\n                        onClick={async () => {\n                            await Alert('Alert Text', 'Alert Title');\n                        }}\n                    >\n                        Alert\n                    </Button>\n                    <Button\n                        onClick={async () => {\n                            setResult(String(await Confirm('Сonfirmation text', 'Сonfirmation Title')));\n                        }}\n                    >\n                        Confirm\n                    </Button>\n                    <Button\n                        onClick={async () => {\n                            const age = await Prompt('How old are you?', {\n                                isRequired: true,\n                                defaultValue: 100,\n                            });\n\n                            if (age) {\n                                Alert(`You are ${age} years old!`, 'Your age');\n                            }\n\n                            setResult(age);\n                        }}\n                    >\n                        Promt\n                    </Button>\n                    <Button\n                        onClick={async () => {\n                            setResult(\n                                await CustomDialog(<DemoForm />, {\n                                    title: 'Custom dialog',\n                                })\n                            );\n                        }}\n                    >\n                        Custom\n                    </Button>\n                </div>\n            </div>\n\n            <div className=\"actionLineResult\">\n                {result !== undefined && (\n                    <span>\n                        Dialog result: <b>{result}</b>\n                    </span>\n                )}\n            </div>\n\n            <div className=\"getStartedBlock\">\n                <a href=\"https://github.com/Nodlik/react-st-modal/blob/master/README.md\" className=\"startButton\">GETTING STARTED</a>\n            </div>\n        </>\n    );\n}\n","import './ExampleBlock.scss';\n\nimport {\n    Alert,\n    Confirm,\n    CustomDialog,\n    ModalButton,\n    ModalContent,\n    ModalFooter,\n    StaticDialog,\n    useDialog,\n} from 'react-st-modal';\nimport {\n    AlertExampleCode,\n    ConfirmExampleCode,\n    CustomExampleCode,\n    CustomStaticCode,\n    StyleCode,\n} from '../../Code';\nimport React, { ReactNode, useState } from 'react';\n\nimport { Button } from '../Button/Button';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\ninterface ExampleBlockProps {\n    children?: ReactNode;\n}\n\ntype CodeProps = {\n    code: string;\n    lang?: string;\n};\n\nfunction ExampleCodeBlock(props: CodeProps): JSX.Element {\n    const [isMinimized, setMinimized] = useState(true);\n\n    return (\n        <div\n            className={['code', isMinimized ? '--minimized' : ''].join(' ')}\n            onClick={() => {\n                if (isMinimized) {\n                    setMinimized(false);\n                }\n            }}\n        >\n            {!isMinimized && (\n                <div\n                    className=\"codeHide\"\n                    onClick={() => {\n                        setMinimized(true);\n                    }}\n                >\n                    Hide source\n                </div>\n            )}\n            <SyntaxHighlighter language={props.lang ?? 'tsx'} style={prism}>\n                {props.code}\n            </SyntaxHighlighter>\n        </div>\n    );\n}\n\nfunction AlertExample(): JSX.Element {\n    const [alertState, setAlertState] = useState<string>();\n\n    return (\n        <div className=\"example\">\n            <div className=\"exampleLeft\">\n                <div className=\"exampleItem\">\n                    <Button\n                        type=\"demo\"\n                        onClick={async () => {\n                            setAlertState('Alert opened');\n\n                            await Alert('Alert text', 'Alert title');\n\n                            setAlertState('Alert closed');\n                        }}\n                    >\n                        Alert\n                    </Button>\n                    <div className=\"exampleResult\">{alertState}</div>\n                </div>\n            </div>\n            <div className=\"exampleRight\">\n                <ExampleCodeBlock code={AlertExampleCode} />\n            </div>\n        </div>\n    );\n}\n\nfunction ConfirmExample(): JSX.Element {\n    const [alertState, setAlertState] = useState<string>();\n\n    return (\n        <div className=\"example\">\n            <div className=\"exampleLeft\">\n                <div className=\"exampleItem\">\n                    <Button\n                        type=\"demo\"\n                        onClick={async () => {\n                            setAlertState('Confirmation dialog is open');\n\n                            const result = await Confirm('Сonfirmation text', 'Сonfirmation title');\n\n                            setAlertState(result ? 'OK' : 'CANCEL');\n                        }}\n                    >\n                        Confirm\n                    </Button>\n                    <div className=\"exampleResult\">{alertState}</div>\n                </div>\n            </div>\n            <div className=\"exampleRight\">\n                <ExampleCodeBlock code={ConfirmExampleCode} />\n            </div>\n        </div>\n    );\n}\n\nfunction CustomDialogContent(): JSX.Element {\n    const dialog = useDialog();\n\n    const [value, setValue] = useState<string>();\n\n    return (\n        <div className=\"customDialog\">\n            <ModalContent>\n                <div>Custom dialog content</div>\n                <label>\n                    Input value:\n                    <input\n                        type=\"text\"\n                        onChange={(e) => {\n                            setValue(e.target.value);\n                        }}\n                    />\n                </label>\n            </ModalContent>\n            <ModalFooter>\n                <ModalButton\n                    onClick={() => {\n                        dialog.close(value);\n                    }}\n                >\n                    Custom button\n                </ModalButton>\n            </ModalFooter>\n        </div>\n    );\n}\n\nfunction CustomExample(): JSX.Element {\n    const [alertState, setAlertState] = useState<string>();\n\n    return (\n        <div className=\"example\">\n            <div className=\"exampleLeft\">\n                <div className=\"exampleItem\">\n                    <Button\n                        type=\"demo\"\n                        onClick={async () => {\n                            setAlertState('Custom dialog is open');\n\n                            const result = await CustomDialog<string>(<CustomDialogContent />, {\n                                title: 'Custom Dialog',\n                                showCloseIcon: true,\n                            });\n\n                            setAlertState(result);\n                        }}\n                    >\n                        Custom\n                    </Button>\n                    <div className=\"exampleResult\">{alertState}</div>\n                </div>\n            </div>\n            <div className=\"exampleRight\">\n                <ExampleCodeBlock code={CustomExampleCode} />\n            </div>\n        </div>\n    );\n}\n\nfunction CustomStaticExample(): JSX.Element {\n    const [isOpen, setOpen] = useState<boolean>(false);\n\n    const [alertState, setAlertState] = useState<string>();\n\n    return (\n        <>\n            <StaticDialog\n                isOpen={isOpen}\n                title=\"Custom static dialog\"\n                onAfterOpen={() => {\n                    setAlertState('Custom dialog is open');\n                }}\n                onAfterClose={(result?: string) => {\n                    setOpen(false);\n                    setAlertState(result);\n                }}\n            >\n                <CustomDialogContent />\n            </StaticDialog>\n            <div className=\"example\">\n                <div className=\"exampleLeft\">\n                    <div className=\"exampleItem\">\n                        <Button\n                            type=\"demo\"\n                            onClick={async () => {\n                                setOpen(true);\n                            }}\n                        >\n                            Static\n                        </Button>\n                        <div className=\"exampleResult\">{alertState}</div>\n                    </div>\n                </div>\n                <div className=\"exampleRight\">\n                    <ExampleCodeBlock code={CustomStaticCode} />\n                </div>\n            </div>\n        </>\n    );\n}\n\nfunction AlertDesignExample(): JSX.Element {\n    const [alertState, setAlertState] = useState<string>();\n\n    const setStyle = () => {\n        const root = document.documentElement;\n\n        root.style.setProperty('--st-modal-borderRadius', '0px');\n        root.style.setProperty('--st-modal-boxShadow', '0 10px 50px rgba(0, 0, 0, 0.8)');\n\n        root.style.setProperty('--st-modal-backgroundColor', '#2a2a2a');\n        root.style.setProperty('--st-modal-titleTextColor', '#eeeeee');\n        root.style.setProperty('--st-modal-secondColor', '#3c3c3c');\n\n        root.style.setProperty('--st-dialog-contentColor', '#fff');\n\n        root.style.setProperty(\n            '--st-modal-transformVisible',\n            'translate3d(-50%, -50%, 0) scale(1)'\n        );\n\n        root.style.setProperty(\n            '--st-modal-transformHidden',\n            'translate3d(-50%, -50%, 0) scale(0.1)'\n        );\n\n        root.style.setProperty('--st-button-primaryColor', '#DDDDDD');\n        root.style.setProperty('--st-button-primaryTextColor', '#000');\n    };\n\n    const resetStyle = () => {\n        const root = document.documentElement;\n\n        root.style.setProperty('--st-modal-borderRadius', '5px');\n        root.style.setProperty('--st-modal-boxShadow', '0 0 10px rgba(0, 0, 0, 0.3)');\n\n        root.style.setProperty('--st-modal-backgroundColor', '#ffffff');\n        root.style.setProperty('--st-modal-titleTextColor', '#444444');\n        root.style.setProperty('--st-modal-secondColor', '#f6f6f6');\n\n        root.style.setProperty('--st-dialog-contentColor', '#000000');\n\n        root.style.setProperty(\n            '--st-modal-transformVisible',\n            'translate3d(-50%, -50%, 0) scale(1) rotateX(0)'\n        );\n        root.style.setProperty(\n            '--st-modal-transformHidden',\n            'translate3d(-50%, 100%, 0) scale(0.5) rotateX(-90deg)'\n        );\n\n        root.style.setProperty('--st-button-primaryColor', '#5d9aff');\n        root.style.setProperty('--st-button-primaryTextColor', '#ffffff');\n    };\n\n    return (\n        <div className=\"example\">\n            <div className=\"exampleLeft\">\n                <div className=\"exampleItem\">\n                    <Button\n                        type=\"demo\"\n                        onClick={async () => {\n                            setStyle();\n                            setAlertState('Alert opened');\n\n                            await Alert('Alert text', 'Alert title');\n\n                            setTimeout(() => {\n                                resetStyle();\n                            }, 500);\n                            setAlertState('Alert closed');\n                        }}\n                    >\n                        Custom Style\n                    </Button>\n                    <div className=\"exampleResult\">{alertState}</div>\n                </div>\n            </div>\n            <div className=\"exampleRight\">\n                <ExampleCodeBlock code={StyleCode} lang=\"scss\" />\n            </div>\n        </div>\n    );\n}\n\nexport function ExampleBlock(props: ExampleBlockProps): JSX.Element {\n    return (\n        <div className=\"exampleBlock\">\n            <h2>Demos</h2>\n            <AlertExample />\n            <ConfirmExample />\n            <CustomExample />\n            <CustomStaticExample />\n            <AlertDesignExample />\n        </div>\n    );\n}\n","import './Header.scss';\n\nimport React from 'react';\n\nfunction Logo(): JSX.Element {\n    return (\n        <svg width=\"294px\" height=\"27px\" viewBox=\"0 0 294 27\">\n            <g>\n                <path\n                    d=\"M1.48,26 L1.48,13.505 L7.29,13.505 L14.78,26 L15.655,26 L8.13,13.47 C8.94666667,13.47 9.78083333,13.365 10.6325,13.155 C11.4841667,12.945 12.26,12.6008333 12.96,12.1225 C13.66,11.6441667 14.2316667,11.02 14.675,10.25 C15.1183333,9.48 15.34,8.51166667 15.34,7.345 C15.34,6.085 15.1066667,5.05833333 14.64,4.265 C14.1733333,3.47166667 13.5725,2.8475 12.8375,2.3925 C12.1025,1.9375 11.2683333,1.62833333 10.335,1.465 C9.40166667,1.30166667 8.48,1.22 7.57,1.22 L7.57,1.22 L0.71,1.22 L0.71,26 L1.48,26 Z M7.535,12.84 L1.48,12.84 L1.48,1.885 L7.15,1.885 C8.08333333,1.885 8.99916667,1.96666667 9.8975,2.13 C10.7958333,2.29333333 11.5891667,2.57916667 12.2775,2.9875 C12.9658333,3.39583333 13.52,3.95583333 13.94,4.6675 C14.36,5.37916667 14.57,6.27166667 14.57,7.345 C14.57,9.095 13.9691667,10.4483333 12.7675,11.405 C11.5658333,12.3616667 9.82166667,12.84 7.535,12.84 L7.535,12.84 Z M36.7366666,26 L36.7366666,25.3 L22.4916666,25.3 L22.4916666,13.505 L35.3716666,13.505 L35.3716666,12.805 L22.4916666,12.805 L22.4916666,1.92 L36.1766666,1.92 L36.1766666,1.22 L21.7566666,1.22 L21.7566666,26 L36.7366666,26 Z M40.4233332,26 L43.4683332,18.895 L57.8533332,18.895 L60.7933332,26 L61.6333332,26 L51.3083332,1.22 L50.3283332,1.22 L39.5833332,26 L40.4233332,26 Z M57.6083332,18.23 L43.7483332,18.23 L50.7833332,1.71 L57.6083332,18.23 Z M77.0449998,26.7 C78.7016665,26.7 80.3291665,26.3908333 81.9274998,25.7725 C83.5258331,25.1541667 84.8499998,24.215 85.8999998,22.955 L85.8999998,22.955 L85.3399998,22.43 C84.3599998,23.62 83.1174998,24.5125 81.6124998,25.1075 C80.1074998,25.7025 78.5849998,26 77.0449998,26 C75.2483331,26 73.6208331,25.6791667 72.1624998,25.0375 C70.7041665,24.3958333 69.4558331,23.515 68.4174998,22.395 C67.3791665,21.275 66.5799998,19.9625 66.0199998,18.4575 C65.4599998,16.9525 65.1799998,15.3366667 65.1799998,13.61 C65.1799998,11.8833333 65.4658331,10.2675 66.0374998,8.7625 C66.6091665,7.2575 67.4141665,5.945 68.4524998,4.825 C69.4908331,3.705 70.7391665,2.82416667 72.1974998,2.1825 C73.6558331,1.54083333 75.2716665,1.22 77.0449998,1.22 C77.6983331,1.22 78.3749998,1.27833333 79.0749998,1.395 C79.7749998,1.51166667 80.4691665,1.69833333 81.1574998,1.955 C81.8458331,2.21166667 82.4991665,2.5325 83.1174998,2.9175 C83.7358331,3.3025 84.2899998,3.75166667 84.7799998,4.265 L84.7799998,4.265 L85.2699998,3.705 C84.2433331,2.63166667 83.0008331,1.8325 81.5424998,1.3075 C80.0841665,0.7825 78.5849998,0.52 77.0449998,0.52 C75.2016665,0.52 73.5041665,0.846666667 71.9524998,1.5 C70.4008331,2.15333333 69.0649998,3.0575 67.9449998,4.2125 C66.8249998,5.3675 65.9558331,6.75 65.3374998,8.36 C64.7191665,9.97 64.4099998,11.72 64.4099998,13.61 C64.4099998,15.5 64.7191665,17.25 65.3374998,18.86 C65.9558331,20.47 66.8249998,21.8525 67.9449998,23.0075 C69.0649998,24.1625 70.3949998,25.0666667 71.9349998,25.72 C73.4749998,26.3733333 75.1783331,26.7 77.0449998,26.7 Z M97.1116664,26 L97.1116664,1.92 L105.546666,1.92 L105.546666,1.22 L87.9066664,1.22 L87.9066664,1.92 L96.3416664,1.92 L96.3416664,26 L97.1116664,26 Z M124.89,26.63 C125.986666,26.63 127.054166,26.4783333 128.0925,26.175 C129.130833,25.8716667 130.046666,25.4108333 130.84,24.7925 C131.633333,24.1741667 132.269166,23.3925 132.7475,22.4475 C133.225833,21.5025 133.465,20.3883333 133.465,19.105 C133.465,17.8683333 133.243333,16.8475 132.8,16.0425 C132.356666,15.2375 131.785,14.5666667 131.085,14.03 C130.385,13.4933333 129.603333,13.0616667 128.74,12.735 C127.876666,12.4083333 127.025,12.1166667 126.185,11.86 C125.485,11.6266667 124.825833,11.3991667 124.2075,11.1775 C123.589166,10.9558333 123.0525,10.6875 122.5975,10.3725 C122.1425,10.0575 121.780833,9.6725 121.5125,9.2175 C121.244166,8.7625 121.11,8.19666667 121.11,7.52 C121.11,6.82 121.255833,6.21916667 121.5475,5.7175 C121.839166,5.21583333 122.218333,4.79583333 122.685,4.4575 C123.151666,4.11916667 123.670833,3.87416667 124.2425,3.7225 C124.814166,3.57083333 125.38,3.495 125.94,3.495 C126.99,3.495 127.935,3.71083333 128.775,4.1425 C129.615,4.57416667 130.28,5.12833333 130.77,5.805 L130.77,5.805 L133.22,3.425 C132.45,2.56166667 131.435,1.87333333 130.175,1.36 C128.915,0.846666667 127.561666,0.59 126.115,0.59 C125.088333,0.59 124.0675,0.724166667 123.0525,0.9925 C122.0375,1.26083333 121.1275,1.68666667 120.3225,2.27 C119.5175,2.85333333 118.864166,3.58833333 118.3625,4.475 C117.860833,5.36166667 117.61,6.42333333 117.61,7.66 C117.61,8.80333333 117.796666,9.76 118.17,10.53 C118.543333,11.3 119.033333,11.9475 119.64,12.4725 C120.246666,12.9975 120.935,13.4291667 121.705,13.7675 C122.475,14.1058333 123.256666,14.3916667 124.05,14.625 C124.843333,14.8816667 125.595833,15.1325 126.3075,15.3775 C127.019166,15.6225 127.643333,15.92 128.18,16.27 C128.716666,16.62 129.1425,17.0458333 129.4575,17.5475 C129.7725,18.0491667 129.93,18.6733333 129.93,19.42 C129.93,20.1666667 129.778333,20.8025 129.475,21.3275 C129.171666,21.8525 128.780833,22.29 128.3025,22.64 C127.824166,22.99 127.293333,23.2466667 126.71,23.41 C126.126666,23.5733333 125.543333,23.655 124.96,23.655 C123.816666,23.655 122.755,23.3866667 121.775,22.85 C120.795,22.3133333 120.013333,21.6133333 119.43,20.75 L119.43,20.75 L116.735,23.025 C117.691666,24.215 118.899166,25.1133333 120.3575,25.72 C121.815833,26.3266667 123.326666,26.63 124.89,26.63 Z M146.741666,26 L146.741666,4.265 L154.686666,4.265 L154.686666,1.22 L135.331666,1.22 L135.331666,4.265 L143.276666,4.265 L143.276666,26 L146.741666,26 Z M170.039999,26 L170.039999,4.475 L170.109999,4.475 L179.069999,26 L180.399999,26 L189.359999,4.475 L189.429999,4.475 L189.429999,26 L191.949999,26 L191.949999,1.22 L188.099999,1.22 L179.804999,21.73 L179.769999,21.73 L171.369999,1.22 L167.519999,1.22 L167.519999,26 L170.039999,26 Z M210.371666,26.63 C212.214999,26.63 213.924166,26.3033333 215.499166,25.65 C217.074166,24.9966667 218.439166,24.0925 219.594166,22.9375 C220.749166,21.7825 221.653333,20.4116667 222.306666,18.825 C222.959999,17.2383333 223.286666,15.5 223.286666,13.61 C223.286666,11.72 222.959999,9.98166667 222.306666,8.395 C221.653333,6.80833333 220.749166,5.4375 219.594166,4.2825 C218.439166,3.1275 217.074166,2.22333333 215.499166,1.57 C213.924166,0.916666667 212.214999,0.59 210.371666,0.59 C208.528333,0.59 206.819166,0.916666667 205.244166,1.57 C203.669166,2.22333333 202.304166,3.1275 201.149166,4.2825 C199.994166,5.4375 199.089999,6.80833333 198.436666,8.395 C197.783333,9.98166667 197.456666,11.72 197.456666,13.61 C197.456666,15.5 197.783333,17.2383333 198.436666,18.825 C199.089999,20.4116667 199.994166,21.7825 201.149166,22.9375 C202.304166,24.0925 203.669166,24.9966667 205.244166,25.65 C206.819166,26.3033333 208.528333,26.63 210.371666,26.63 Z M210.371666,24.39 C208.784999,24.39 207.355833,24.0983333 206.084166,23.515 C204.812499,22.9316667 203.733333,22.15 202.846666,21.17 C201.959999,20.19 201.283333,19.0466667 200.816666,17.74 C200.349999,16.4333333 200.116666,15.0566667 200.116666,13.61 C200.116666,12.1633333 200.349999,10.7866667 200.816666,9.48 C201.283333,8.17333333 201.959999,7.02416667 202.846666,6.0325 C203.733333,5.04083333 204.812499,4.25333333 206.084166,3.67 C207.355833,3.08666667 208.784999,2.795 210.371666,2.795 C211.958333,2.795 213.387499,3.08666667 214.659166,3.67 C215.930833,4.25333333 217.009999,5.04083333 217.896666,6.0325 C218.783333,7.02416667 219.459999,8.17333333 219.926666,9.48 C220.393333,10.7866667 220.626666,12.1633333 220.626666,13.61 C220.626666,15.0566667 220.393333,16.4333333 219.926666,17.74 C219.459999,19.0466667 218.783333,20.19 217.896666,21.17 C217.009999,22.15 215.930833,22.9316667 214.659166,23.515 C213.387499,24.0983333 211.958333,24.39 210.371666,24.39 Z M237.018333,26 C238.558333,26 240.104166,25.7433333 241.655833,25.23 C243.207499,24.7166667 244.607499,23.9408333 245.855833,22.9025 C247.104166,21.8641667 248.113333,20.575 248.883333,19.035 C249.653333,17.495 250.038333,15.6866667 250.038333,13.61 C250.038333,11.5566667 249.653333,9.75416667 248.883333,8.2025 C248.113333,6.65083333 247.104166,5.35583333 245.855833,4.3175 C244.607499,3.27916667 243.207499,2.50333333 241.655833,1.99 C240.104166,1.47666667 238.558333,1.22 237.018333,1.22 L237.018333,1.22 L228.793333,1.22 L228.793333,26 L237.018333,26 Z M236.318333,23.76 L231.313333,23.76 L231.313333,3.46 L236.318333,3.46 C238.184999,3.46 239.812499,3.75166667 241.200833,4.335 C242.589166,4.91833333 243.738333,5.6825 244.648333,6.6275 C245.558333,7.5725 246.240833,8.65166667 246.695833,9.865 C247.150833,11.0783333 247.378333,12.3266667 247.378333,13.61 C247.378333,14.8933333 247.150833,16.1416667 246.695833,17.355 C246.240833,18.5683333 245.558333,19.6475 244.648333,20.5925 C243.738333,21.5375 242.589166,22.3016667 241.200833,22.885 C239.812499,23.4683333 238.184999,23.76 236.318333,23.76 L236.318333,23.76 Z M254.529999,26 L257.224999,19.49 L270.034999,19.49 L272.764999,26 L275.564999,26 L264.924999,1.22 L262.474999,1.22 L251.764999,26 L254.529999,26 Z M269.089999,17.18 L258.169999,17.18 L263.629999,4.02 L269.089999,17.18 Z M293.531666,26 L293.531666,23.76 L281.981666,23.76 L281.981666,1.22 L279.461666,1.22 L279.461666,26 L293.531666,26 Z\"\n                    id=\"REACTSTMODAL\"\n                    fill=\"#FFFFFF\"\n                    fillRule=\"nonzero\"\n                ></path>\n            </g>\n        </svg>\n    );\n}\n\nfunction GithabLogo(): JSX.Element {\n    return (\n        <svg\n            version=\"1.1\"\n            x=\"0px\"\n            y=\"0px\"\n            width=\"50px\"\n            height=\"50px\"\n            viewBox=\"0 0 24 24\"\n            fill=\"#FFFFFF\"\n            fillRule=\"nonzero\"\n        >\n            <path d=\"M15.5 22.7h-.1l-.1-.1V22v-2.5c0-.7-.1-1.3-.4-1.8 2.3-.4 4.8-1.6 4.8-6.1 0-1.2-.4-2.3-1.1-3.2.2-.6.3-1.7-.2-3.1l-.3-.3s-.2-.1-.4-.1c-.6 0-1.5.2-3 1.2-.8-.1-1.7-.3-2.7-.3-1 0-1.9.1-2.8.3C7.8 5.2 6.8 5 6.2 5c-.2 0-.3.1-.4.1-.1 0-.3.2-.3.3-.5 1.4-.4 2.5-.2 3.1-.7.9-1.1 2-1.1 3.2 0 4.4 2.6 5.6 4.8 6.1-.1.2-.2.5-.3.8-.2.1-.5.2-.9.2s-.8-.1-1.1-.4l-.1-.1c-.1-.1-.1-.2-.2-.2l-.1-.1-.1-.1c0-.1-.8-1.3-2.2-1.4-.5 0-.9.2-1 .5-.2.5.4.9.7 1.1 0 0 .6.3 1 1.4.2.7 1.1 2 3.2 2h.7v1.4l-.1.1s-.1 0 0 0C4 21.2 1 17 1 12.3c0-6.1 4.9-11 11-11s11 4.9 11 11c0 4.7-3 8.9-7.5 10.4z\" />\n        </svg>\n    );\n}\n\nexport function Header(): JSX.Element {\n    return (\n        <header className=\"header\">\n            <div className=\"header__logo\">\n                <Logo />\n            </div>\n            <div className=\"header__right\">\n                <a href=\"https://github.com/Nodlik/react-st-modal/blob/master/README.md\" className=\"header__link\">\n                    Getting started\n                </a>\n                <a href=\"https://github.com/Nodlik/react-st-modal\" className=\"header__githab\">\n                    <GithabLogo />\n                </a>\n            </div>\n        </header>\n    );\n}\n","import './App.css';\n\nimport { ActionLine } from './components/ActionLine/ActionLine';\nimport { ExampleBlock } from './components/ExampleBlock/ExampleBlock';\nimport { Header } from './components/Header/Header';\nimport { Intro } from './components/Intro/Intro';\nimport React from 'react';\n\nfunction App() {\n    return (\n        <div className=\"wrapper\">\n            <Header />\n            <Intro />\n            <ActionLine />\n            <ExampleBlock />\n        </div>\n    );\n}\n\nexport default App;\n","import './index.scss';\n\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}